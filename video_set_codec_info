#!/usr/bin/env python3

import os
import shutil
import sys
import subprocess
import json
from video_slibrary_print_utils import print_green, print_red, print_blue

def error_exit(message):
  print_red(message)
  sys.exit(1)

def check_file_exists(file_path):
  if not os.path.isfile(file_path):
    error_exit(f"Could not find file: {file_path}")

def set_codec_info(video_file):
  # Check if video file exists
  check_file_exists(video_file)

  print_green(f"Processing file: {video_file}")

  extension = os.path.splitext(video_file)[1][1:].lower()

  # Codec data file name
  codec_file = f"{os.path.splitext(video_file)[0]}_codec.json"

  with open(codec_file, 'r') as f:
    codec_data = json.load(f)

  comment = ""
  for key, value in codec_data.items():
    comment += f"{value}\n"
  comment = comment.rstrip('\n')

  # check if we are processing a quicktime or MP4 container
  if extension in ["mov", "mp4"]:
    cmd = ['exiftool', '-api', 'largefilesupport=1', '-overwrite_original', f'-xmp:LogComment={comment}', video_file]
    result = subprocess.run(cmd, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
    if result.returncode != 0:
      error_exit("Could not update tag xmp:LogComment")

# Check if the exiftool command is available in the system
if shutil.which('exiftool') is None:
  error_exit("Exiftol command not found. Please install it before running this script.")

# Check if at least one video file is provided as a command-line argument
if len(sys.argv) < 2:
    error_exit("No video file specified. Please provide at least one video file as an argument.")


for movie_file in sys.argv[1:]:
  set_codec_info(movie_file)